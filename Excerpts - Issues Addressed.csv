Paper;Code;Evidency
A100;Increase digital access/ease of use;The issue of conveying quick overview of code structure remains a challenge through both modalities in part due to the linearity of presentation and the impact this has on users’ information seeking behaviours [8, 10].
A100;Increase understanding of users;More recent work, (e.g. [6, 2]), shows that alternative presentation and navigation techniques can improve non visual comprehension code. Therefore, there is a case to be made for the investigation and development of new tools and navigation approaches that may improve the experience for a visually-impaired programmer.
A114;Increase digital access/ease of use;We target the following problem: blind programmers have no way to skim code when it is presented to them on the web.
A13;Increase digital access/ease of use;We purpose of this study was to explore the practices and challenges of a mixed-ability team in a smallgroup collaborative programming project through a duoethnographic approach.
A136;Increase digital access/ease of use;this paper aims to assess the availability and accessibility of solutions for the inclusion of blind people in activities focused on the creation and editing of UML diagrams, facilitating their inclusion in computer education programs and in the software development industry
A145;Increase digital access/ease of use;These feature-rich IDEs enable developers to be more productive and efficient. Though screen readers provide basic accessibility to IDEs1, many features that make them so useful to sighted developers remain inaccessible to developers using screen readers
A145;Increase understanding of users;To go beyond the specific experiences of the two authors mentioned and to understand the spectrum of accessibility issues that arise during the complete programming cycle, we conducted a user survey which we discuss in the next section
A146;Increase digital access/ease of use;CodeWalk, an implementation of a set of features added to Microsoft’s Live Share VS Code extension that makes synchronous programming tasks accessible to BVI developers
A87;Other;The goal of this study is to examine current scholarship on the accessibility of programming languages and programming environments for people with visual impairments.
A147;Increase digital access/ease of use;We describe how the frst author, who is blind, and the second author, who is sighted, have been working together to make the open source IDE Visual Studio Code (VSCode) nonvisually accessible and what specifc accessibility features have been implemented as a result of our collaboration.
A214;Increase understanding of users;To initiate the process, we are working to understand the user population, as well as their needs, challenges, and strategies in terms of programming and related software engineering tasks. The process of elicitation was carefully designed and revised in order to accommodate both the users and the authors.
A241;Increase understanding of users;The problem we address in this paper is the lack of research focused on the workplace practices of blind or visually impaired (BVI) programmers within software development teams or organizations.
A242;Increase digital access/ease of use;"Being unable to use these visual cues, programmers with visual impairments must struggle to contend with the complexities of writing source code such as resolving syntax errors and determining nesting levels. With improved accessibility to source code, not only would more people with visual impairments be able to participate in programming. 

""Are auditory cues used in a visual programming environment effective in aiding users in navigating and understanding source code?"
A242;Increase understanding of users;While there are many visual cues in programming that make writing and navigating programs easier, audio cues are an innovation that have rarely been implemented in visually programming. Which form of auditory cue is the most effective?
A250;Increase understanding of users;The aim of the experiment was to investigate if crowding in code layout affected the gaze behaviour and program comprehension of programmers with dyslexia
A269;Increase digital access/ease of use;"Unfortunately, these visual cues are not readily available to blind and low-vision (BLV) programmers who must use assistive technologies like screen readers (e.g., NVDA [3]). This is because a screen reader can only narrate textual descriptions of content given by an app or an IDE, and for most visual cues, IDEs do not provide meaningful descriptions [15, 38, 49, 52, 62]. Thus, most BLV programmers do not beneft from modern IDEs; instead, they are forced to use plain text editors (e.g., Notepad, TextEdit, Notepad++) [15, 45], which affects their coding activities, such as code navigation, comprehension, skimming, debugging, and editing [15, 34, 38, 45, 49, 62]."
A279;Increase understanding of users;While the accessibility barriers encountered by individuals who are blind have been well documented by researchers, relatively limited attention has been given to the needs of interface developers who use assistive technologies to support their work.
A3;Increase digital access/ease of use;"We found that DWVI used many of the same information sources previously documented in studies of DWNSVI, and these technical sources sufered from fundamental accessibility issues common to nontechnical sources. 

Here, we build on this work by examining accessibility issues in information seeking and technical information sources, outside of source code navigation and IDEs."
A3;Increase understanding of users;"Information seeking and synthesis is a particularly difcult aspect of professional coding, regardless of visual abilities. So, a variety of novel technologies have been designed specifcally to support this process [13, 35–37, 51, 58, 60, 74, 80]. These tools have been built upon a large body of research examining the information behaviors of DWNSVI [14, 20, 28, 29, 45, 48, 50, 59]. DWVI might also beneft from support in information seeking. However, there is no analogous body of work examining the information behaviors of DWVI

To explore how DWVI seek and synthesize information in their professional lives"
A305;Increase digital access/ease of use;Moreover, there has been a lack of work around evaluating speech interaction approaches that support code navigation in collaboration with developers who have physical impairments. Our work addresses these points through exploring whether voice-based navigation approaches are feasible and the extent to which they may be able to enhance accessibility within coding environments.
A305;Increase understanding of users;We initially conducted interviews with fve developers who have physical impairments to understand further their current methods for navigating code within voice-controlled editors
A312;Increase digital access/ease of use;In summary, our findings provide greater empirical evidence about the need to improve code navigation features in IDEs for blind programmers, and it identifies opportunities for researchers and industry for addressing these needs
A375;Increase understanding of users;We investigated how Program-L provides value to BLV developers by studying novice users’ help seeking messages
A376;Increase digital access/ease of use;For people with disabilities who may have difculty typing or using a keyboard, speech recognition technology can potentially make programming more accessible by allowing them to dictate code instead of typing it
A376;Increase understanding of users;We wanted to better understand if programmers speak code naturally or in a literal manner, whether they skip symbols, spell things out, or explicitly denote cases
A379;Increase digital access/ease of use;In this project, we are aiming to bridge that gap between accessibility and collaborative technology by employing Contextual Inquiry methods
A379;Increase physical access;"The need for such a device was imperative as we heard through our contextual inquiry that some have concerns on what to do in the times of an emergency and others feel anxious initiating an in-person conversation with the user. Trying to address this issue, this system hopes to alleviate some of the concerns and anxiety that revolve around such interactions.

The doorbell would be attached to the doorway of his cubicle, and it would inform the user that there’s a user present if the bell is pressed. The amount of button presses would indicate if the person was present for a social or work related talk or for an emergency situation."
A379;Increase understanding of users;How can a deaf-blind person collaborate with coworkers in real time? In this work, we explore socio-technical challenges of a work environment that depends on collaborative and assistive technologies.
A579;Support collaboration;The research involved a series of interventions conducted between the end of 2011 and the beginning of 2014 that sought to include the blind programmer in the software development process adopted by the team
A463;Support collaboration;"Our work focuses on the accessibility of programming in mixed-ability collaborative contexts. Prior work in HCI hasinvestigated accessibility challengesrelated to individual tools

A discussion to build on the current theorizing of accessibility of group work in HCI and CSCW. We recommend that future research in this area should examine interactions around help, especially provision of help by people with visual impairments"
A380;Increase digital access/ease of use;Finally, through a study with two BVI developers using the PSST dashboard to perform tasksthat map to our design goals, we validate the toolkit’s ability to enable BVI developers to understand sensor data
A409;Increase digital access/ease of use;It can be difficult for a blind developer to understand and navigate through a large amount of code quickly, as they are unable to skim as easily as their sighted counterparts. To help blind developers overcome this problem, we present StructJumper, an Eclipse plugin that creates a hierarchical tree based on the nesting structure of a Java class
A429;Increase digital access/ease of use;The key concept behind AWMo approach is to provide two distinct views where the users can work with UML class diagrams: the graphical view, where sighted software developers can draw diagrams in the traditional way (by dragging elements and connecting them visually) and the textual view, where software developers with or without visual impairment can create the exact same diagrams using a textual language developed especially for AWMo.
A429;Increase understanding of users;This paper uses the data collected during the mentioned user tests to analyze the navigation strategies of blind users during their interaction with a web application that allows access to UML class diagrams by using a specialized textual language.
A379;Support collaboration;In this project, we are aiming to bridge that gap between accessibility and collaborative technology by employing Contextual Inquiry methods [4]. After collecting data through interviews and on-site observations, we focused on creating low-fidelity prototypes targeting streamlined communication.
A463;Increase understanding of users;"In this paper, we investigate the collaborative experiences of programmers with visual impairments with a focus on the following research questions: (1) What are the collaborative activities and associated challenges that programmers with visual impairments encounter in professional contexts? (2) How do programmers with visual impairments address these challenges? (3) What implications do these challenges have for solo and group work?

An analysis of our interviews with programmers with visual impairments, which provides insights into the logistics of working in mixed-ability workplaces.

In the latter interviews, we asked more specifc questions about the existing practices around these activities and the processes through which participants adopted or modifed these practices to achieve collaboration."
A146;Support collaboration;"Validation of our design’s capability to increase shared awareness and facilitate efcient synchronization during remote collaboration, meeting our design criteria

A design for supporting tightly-coupled synchronous programming activities (see §3 and §4)

Prior to our work, no programming environment with accessible, remote, synchronous co-editing support was publicly available. We have created and released such an environment, in accordance with four design criteria (see §2.4), which include maintaining the agency of BVI developers and reducing their burden to drive the collaboration. 
In this paper, we present CodeWalk, a set of features added to Microsoft’s Live Share VS Code extension1 (available to all Live Share users since November 2021), with support for remote, synchronous code review and refactoring tasks."
A464;Increase understanding of users;Our objective is to explore the challenges faced by developers with ASD and ADHD and investigate how adjustments to agile practices can enhance their comfort and overall team outcomes
A478;Increase digital access/ease of use;In this context, this paper aims at identifying the main techniques that allow an open concept of social inclusion and diversity in agile software development teams and propose any necessary adaptations to help absolute diversity
A520;Increase digital access/ease of use;"The topic of Autism and Software Engineering was investigated under four key themes: Cognitive Abilities and Characteristics of Autistic Software Engineers; Usability of Technology; and the Transition into the Workforce for Individuals on the Autism Spectrum; and Changing the Work Environment to Meet the Needs of Autistic Employees."
A520;Increase understanding of users;The purpose of this paper is to further develop the understanding of the cognitive abilities and characteristics of software engineers with ASD, the usability of technology and the transition into the workforce for individuals on the ASD spectrum, and the working environment for such individuals
A533;Other;"The case of disabled app developers provides a significant example of how the current regulatory framework fails to be inclusive in its attempts to protect the rights of disabled Digital Economy workers. This is the topic of this article, in which we argue that two problems are at the heart of this: 
(1) a continuing failure to collect relevant and comprehensive data on disability; and 
(2) alack of accountability towards disabled workers in atypical employment."
A543;Increase understanding of users;"We conducted interviews with several professionals to understand whether, in the view of managers, company efforts bring expected results; analyze the perception that developers have about the work environment in terms of D&I; and notice possible gaps or failures hindering the creation of a diverse and inclusive environment"
A560;Increase understanding of users;The analysis reported in this paper, using the dataset from [21], concentrates on saccade-related metrics to explore possible differences in gaze behaviour. In particular, drawing upon the work of Busjahn et al. [6], the present analysis seeks to establish if the linearity of code reading is different between programmers with and without dyslexia.
A577;Increase understanding of users;it is important to understand whether such employees face unique challenges in achieving success in computing careers.
A429;Support communication;By making all the changes made in one view available to the other, AWMo also foster the use of the models as a communication tool for teams of software developers composed of both blind and sighted people, while it does not represent an overhead to sighted users, since they will not necessarily need to learn the textual language in order to use the tool.
A61;Increase digital access/ease of use;"In particular, our research goals were to
(1) Understand the experience of using CLIs with screen readers
(2) Understand the accessibility issues developers with visual impairments face when using CLIs
(3) Articulate a set of guidelines to improve CLI accessibility"
A61;Increase understanding of users;"In particular, our research goals were to
(1) Understand the experience of using CLIs with screen readers
(2) Understand the accessibility issues developers with visual impairments face when using CLIs
(3) Articulate a set of guidelines to improve CLI accessibility"
A64;Increase digital access/ease of use;We explored the accessibility of prototyping tools and their prototypes by assessing how well both work with screen readers. Specifcally, we attempted to use prototyping tools with screen readers to see which parts of the prototyping tools were accessible by screen reader, and which parts were not
A65;Increase understanding of users;This paper takes a deep dive into the challenges in UI development and collaboration due to use of UI frameworks and libraries.
A74;Increase digital access/ease of use;Visually-impaired programmers completed several tasks with and without our tool, and we compared their results and experience
A76;Increase digital access/ease of use;We formulated the following research question to evaluate Accessible Blockly for block-based code navigation. RQ1. How well does the keyboard and screen reader navigation strategy in Accessible Blockly aid people with visual impairments navigate and understand block-based code
A79;Increase understanding of users;To address this gap in the literature, we explore accessibility issues that screen reader users face when learning and practicing web development, the workarounds or strategies they employ, and opportunities to design curricula and tools to better support blind web developers.
A8;Increase understanding of users;Studies of how blind programmers comprehend code may help demystify the process of hiring the visually impaired. In this paper,3 we present a study comparing the process of program comprehension by blind programmers to the process followed by sighted programmers.
A379;Support communication;we decided to focus on making prototypes that alleviate some of the communication issues of working in a co-located, collaborative organization. The prototypes we offer provide synchronous communication methods in all types of environments to reduce the amount of bottlenecked communication found in the workplace.
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;
